version: 2 
circleci: 2.0
jobs: 
  build: 
  # runs not using Workflows must have a 'build' job as entry point
    docker: run the steps with Docker
      - image: circleci
         node: 8.8.1
      # ...with this image as the primary container; this is where all `steps` will run
    steps:
    # a collection of executable commands
      - $ git checkout [ master ] 
      # special step to check out source code to working directory
       - run:
           name: update-npm
           command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm
          command: npm install
      - save_cache:
      # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: 
      - tests:
          name: test-with-codecov
          command: npm run test-coverage
      - store_artifacts:
      # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results.xml
          prefix: tests
      - store_artifacts: 
      # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: coverage
          prefix: coverage
      - store_test_results: 
      # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results.xml
          
 # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
#Branches are an important part of working with Git.
#Any commits you make will be made on the branch you’re currently “checked out” to.
#Use git status to see which branch that is.
#$ git branch [branch-name]
#Creates a new branch
#$ git checkout [branch-name]
#Switches to the specified branch and updates the working directory
#$ git merge [branch]
#Combines the specified branch’s history into the current branch. This is usually done in pull requests, but is an important Git operation.
#$ git branch -d [branch-name]
#Deletes the specified branch
